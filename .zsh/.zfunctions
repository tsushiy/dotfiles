autoload -Uz colors && colors
autoload -Uz compinit && compinit
autoload -Uz add-zsh-hook
autoload -Uz vcs_info

autoload -Uz history-search-end
zle -N history-beginning-search-backward-end history-search-end
zle -N history-beginning-search-forward-end history-search-end
bindkey "^P" history-beginning-search-backward-end
bindkey "^N" history-beginning-search-forward-end

# see https://qiita.com/yuyuchu3333/items/b10542db482c3ac8b059
ls_abbrev() {
  if [[ -z ${PWD} ]]; then
    return
  fi

  local ls_result=$(CLICOLOR_FORCE=1 COLUMNS=${COLUMNS} ls -aCF | sed $'/^\e\[[0-9;]*m$/d')
  local ls_lines=$(echo ${ls_result} | wc -l | tr -d ' ')

  if [ ${ls_lines} -gt 8 ]; then
    echo "${ls_result}" | head -n 4
    echo "..."
    echo "${ls_result}" | tail -n 4
    echo "$(command ls -1 -A | wc -l | tr -d ' ') files exist."
  else
    echo "${ls_result}"
  fi
}
add-zsh-hook chpwd ls_abbrev

# see https://qiita.com/yuyuchu3333/items/e9af05670c95e2cc5b4d
do_enter() {
  if [ -n "${BUFFER}" ]; then
    zle accept-line
    return
  fi
  echo
  ls_abbrev
  if [ "$(git rev-parse --is-inside-work-tree 2> /dev/null)" = "true" ]; then
    echo
    echo -e "\e[0;33m--- git status ---\e[0m"
    git status -sb
    echo
  fi
  zle reset-prompt
}
zle -N do_enter
bindkey '^m' do_enter

# see https://qiita.com/strsk/items/9151cef7e68f0746820d
peco-src() {
  local selected_dir=$(ghq list -p | peco --query "$LBUFFER")
  if [ -n "${selected_dir}" ]; then
    BUFFER="cd ${selected_dir}"
    zle accept-line
  fi
  zle clear-screen
}
zle -N peco-src
bindkey '^]' peco-src
